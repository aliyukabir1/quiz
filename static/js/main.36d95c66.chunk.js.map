{"version":3,"sources":["components/Question.js","App.js","reportWebVitals.js","index.js"],"names":["Question","props","Questions","Quest","answer","answerText","isCorrect","id","state","count","end","score","handleClick","bind","e","correctIndex","this","findIndex","x","correct","choosen","target","parseInt","setState","length","render","list","className","map","onClick","scoreboard","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36d95c66.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\n\r\nclass Question extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = { \r\n            count : 0,\r\n            end : false,\r\n            score: 0\r\n         }\r\n// binding\r\n         this.handleClick = this.handleClick.bind(this)\r\n    }\r\n    \r\n//questions\r\n    Questions = [\r\n        {\r\n            Quest : 'who was the father of Prophet Muhammad ?',\r\n            answer : [\r\n                {answerText : 'Abu talib', isCorrect : false,id:1} ,\r\n               {answerText : 'Abdulmuttalib', isCorrect : false,id:2} ,\r\n               {answerText : 'Hamzah', isCorrect : false,id:3} ,\r\n               {answerText : 'Abdullah', isCorrect : true, id:4} \r\n            ]\r\n        },\r\n        {\r\n            Quest : 'who was the Mother of Prophet Muhammad ?',\r\n            answer : [\r\n                {answerText : \"A'isha\", isCorrect : false, id:1} ,\r\n               {answerText : 'Amina', isCorrect : true, id:2} ,\r\n               {answerText : 'Maryam', isCorrect : false, id:3} ,\r\n               {answerText : 'Fatima', isCorrect : false, id:4 } \r\n            ]\r\n        },\r\n        {\r\n            Quest : \"who was Prophet Muhammad's Best Friend ?\",\r\n            answer : [\r\n                {answerText : 'Abu bakr', isCorrect : true, id:1} ,\r\n               {answerText : 'Umar', isCorrect :  false, id:2},\r\n               {answerText : 'Abu Huraira', isCorrect : false ,id:3} ,\r\n               {answerText : 'Ali', isCorrect : false , id:4} \r\n            ]\r\n        },\r\n        {\r\n            Quest : \"At what Age did the Prophet die ?\",\r\n            answer : [\r\n                {answerText : '40', isCorrect : false, id:1} ,\r\n               {answerText : '70', isCorrect :  false, id:2},\r\n               {answerText : '63', isCorrect : true , id:3} ,\r\n               {answerText : '58', isCorrect : false , id:4} \r\n            ]\r\n        },\r\n        {\r\n            Quest : \"Who among these was Prophet's Uncle?\",\r\n            answer : [\r\n                {answerText : 'Abu bakr', isCorrect : false, id:1} ,\r\n               {answerText : 'Umar', isCorrect :  false, id:2},\r\n               {answerText : 'Abbas', isCorrect : true , id:3} ,\r\n               {answerText : 'Ali', isCorrect : false , id:4} \r\n            ]\r\n        },\r\n        {\r\n            Quest : \"which book is the most authentic book after AlQuran ?\",\r\n            answer : [\r\n                {answerText : 'Sahih Muslim', isCorrect : false, id:1} ,\r\n               {answerText : 'Riyaadussalihin', isCorrect :  false, id:2},\r\n               {answerText : 'Sahih Bukari', isCorrect : true, id:3} ,\r\n               {answerText : 'Sahih ibn majah', isCorrect : false, id:4} \r\n            ]\r\n        },\r\n        {\r\n            Quest : \"who was the First Khalifah?\",\r\n            answer : [\r\n                {answerText : 'Abu bakr', isCorrect : true, id:1} ,\r\n               {answerText : 'Umar', isCorrect :  false, id:2},\r\n               {answerText : 'Abu Huraira', isCorrect : false, id:3} ,\r\n               {answerText : 'Ali', isCorrect : false, id:4} \r\n            ]\r\n        },\r\n        {\r\n            Quest : \"who was the third Khalifah ?\",\r\n            answer : [\r\n                {answerText : 'Abu bakr', isCorrect : false,id:1} ,\r\n               {answerText : 'Umar', isCorrect :  false,id:2},\r\n               {answerText : 'Uthman', isCorrect : true ,id:3} ,\r\n               {answerText : 'Ali', isCorrect : false ,id:4} \r\n            ]\r\n        },\r\n        {\r\n            Quest : \"who was the only man to have married two daughters of a prophet ?\",\r\n            answer : [\r\n                {answerText : 'Abu bakr', isCorrect : false,id:1} ,\r\n               {answerText : 'Umar', isCorrect :  false,id:2},\r\n               {answerText : 'Uthman', isCorrect : true ,id:3} ,\r\n               {answerText : 'Ali', isCorrect : false ,id:4} \r\n            ]\r\n        },\r\n        {\r\n            Quest : \"who was the Cousin of the Prophet ?\",\r\n            answer : [\r\n                {answerText : 'Abu bakr', isCorrect : false,id:1} ,\r\n               {answerText : 'Umar', isCorrect :  false,id:2},\r\n               {answerText : 'Abbas', isCorrect : false ,id:3} ,\r\n               {answerText : 'Ali', isCorrect : true ,id:4} \r\n            ]\r\n        }\r\n\r\n   ]\r\n    // click handling\r\n   handleClick(e){\r\n        let correctIndex =  this.Questions[this.state.count].answer.findIndex(x => x.isCorrect === true)\r\n        let correct = this.Questions[this.state.count].answer[correctIndex].id\r\n        let choosen = e.target.id\r\n        if( parseInt(choosen) === parseInt(correct)){\r\n            this.setState({ score: this.state.score+1})\r\n        }\r\n     \r\n        \r\n    \r\n       // if count plus one equals length of questions set end to true else increment count\r\n        this.state.count+1 === this.Questions.length ? this.setState({ end : true }) :\r\n        this.setState({count : this.state.count + 1 })\r\n\r\n        \r\n    }\r\n       \r\n   //findIndex(x => x.Country === 'Nigeria')\r\n   componentDidUpdate(){\r\n       this.render()\r\n   }\r\n\r\n    render() { \r\n        \r\n        const list =   \r\n        <div className= 'quiz-container'>\r\n            <div className='current-question'>\r\n                Question <span id='current-question'>{this.state.count + 1}</span>/{this.Questions.length}\r\n            </div>\r\n\r\n            <div className='question'>\r\n             {this.Questions[this.state.count].Quest }\r\n            </div>\r\n\r\n            <div className='ans'>\r\n                {this.Questions[this.state.count].answer.map(answer => {\r\n                     return <button id={answer.id} key= {answer.id} onClick= {this.handleClick}> {answer.answerText} </button>\r\n                })}\r\n            </div>\r\n        \r\n        </div>\r\n\r\n        const scoreboard = \r\n        <div className = 'quiz-container score'>\r\n            <div className ='score-text'>\r\n                your Score is {this.state.score} out of {this.Questions.length}\r\n            </div>\r\n        </div>\r\n       \r\n       if(this.state.end){\r\n        return (\r\n            scoreboard\r\n        )\r\n    }\r\n    else{ return(\r\n        list\r\n    )\r\n    }\r\n    }\r\n}\r\n \r\nexport default Question;","import Question from './components/Question'\nimport './App.css'\n\n\n\nconst App = ( )=>{\n  return(\n   <Question />\n  )\n  \n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}